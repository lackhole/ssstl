message("============================================================")
message("CMAKE_SYSTEM_NAME : ${CMAKE_SYSTEM_NAME}")
message("CMAKE_HOST_SYSTEM_NAME : ${CMAKE_HOST_SYSTEM_NAME}")
message("CMAKE_SYSTEM_PROCESSOR : ${CMAKE_SYSTEM_PROCESSOR}")
message("CMAKE_CXX_COMPILER : ${CMAKE_CXX_COMPILER}")
message("CMAKE_CXX_COMPILER_ID : ${CMAKE_CXX_COMPILER_ID}")
message("CMAKE_CXX_COMPILER_VERSION : ${CMAKE_CXX_COMPILER_VERSION}")
message("CMAKE_CXX_COMPILER_VERSION_INTERNAL : ${CMAKE_CXX_COMPILER_VERSION_INTERNAL}")
message("CMAKE_CXX_STANDARD : ${CMAKE_CXX_STANDARD}")
message("CMAKE_CXX_FLAGS : ${CMAKE_CXX_FLAGS}")
message("============================================================")

macro(SS_TEST_IMPL name target cxx)
    message("Available Test: ${name} (C++${cxx})")
    add_test(NAME ${name} COMMAND ${name})
    add_executable(${name} ${target})
    set_property(TARGET ${name} PROPERTY CXX_STANDARD ${cxx})
    if(EMSCRIPTEN)
        target_link_libraries(${name} PUBLIC ss ${ARGN} "-sEXIT_RUNTIME=1 -sINITIAL_MEMORY=100MB")
    else()
        target_link_libraries(${name} PUBLIC ss ${ARGN})
    endif()
    if (MSVC)
        target_compile_options(${name} PRIVATE /MP)
        target_compile_options(${name} PRIVATE /WX)
    endif ()
endmacro()

macro(SS_TEST_CXX name target)
    add_custom_target(${name})
    FOREACH(XX ${ARGN})
        if (SS_COMPILER_SUPPORT_STD GREATER_EQUAL ${XX})
            SS_TEST_IMPL(${name}_cxx${XX} ${target} ${XX})
            add_dependencies(${name} ${name}_cxx${XX})
        endif ()
    ENDFOREACH()
endmacro()

macro(SS_TEST name target)
    add_custom_target(${name})
    if (SS_COMPILER_SUPPORT_STD_11)
        SS_TEST_IMPL(${name}_cxx11 ${target} 11 ${ARGN})
        add_dependencies(${name} ${name}_cxx11)
    endif ()
    if (SS_COMPILER_SUPPORT_STD_14)
        SS_TEST_IMPL(${name}_cxx14 ${target} 14 ${ARGN})
        add_dependencies(${name} ${name}_cxx14)
    endif ()
    if (SS_COMPILER_SUPPORT_STD_17)
        SS_TEST_IMPL(${name}_cxx17 ${target} 17 ${ARGN})
        add_dependencies(${name} ${name}_cxx17)
    endif ()
    if (SS_COMPILER_SUPPORT_STD_20)
        SS_TEST_IMPL(${name}_cxx20 ${target} 20 ${ARGN})
        add_dependencies(${name} ${name}_cxx20)
    endif ()
    if (SS_COMPILER_SUPPORT_STD_23)
        SS_TEST_IMPL(${name}_cxx23 ${target} 23 ${ARGN})
        add_dependencies(${name} ${name}_cxx23)
    endif ()
endmacro()

include_directories(${CMAKE_CURRENT_SOURCE_DIR})

SS_TEST(algorithm_test      algorithm_test.cc)
SS_TEST(array_test          array_test.cc)
SS_TEST(bitset_test         bitset_test.cc)
SS_TEST_CXX(concepts_test   concepts_test.cc 20)
SS_TEST(functional_test     functional_test.cc)
SS_TEST(iterator_test.cc    iterator_test.cc)
SS_TEST(limits_test.cc      limits_test.cc)
SS_TEST(memory_test         memory_test.cc)
SS_TEST(optional_test       optional_test.cc)
SS_TEST(ranges_test         ranges_test.cc)
SS_TEST(tuple_test          tuple_test.cc)
SS_TEST(type_traits_test    type_traits_test.cc)
SS_TEST(utility_test        utility_test.cc)
SS_TEST(vector_test.cc      vector_test.cc)
